
#user  dyc;
master_process off;
#worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log  logs/error.log  notice;

#pid        logs/nginx.pid;


events {
    worker_connections  1000;
    accept_mutex on;
}


http {
    lua_package_path "/home/dyc/tools/lua-resty-redis/lib/?.lua;;";
    include       mime.types;
    default_type  application/octet-stream;

    log_format  exp1 '$args $body_bytes_sent $bytes_sent $connection $connection_requests $content_length $content_type $host $hostname $http_content_length $is_args $pipe';

    log_format  exp2 '$realpath_root $remote_addr $remote_port $remote_user "$request" $request_body $request_completion $request_filename $request_length';

    log_format  exp3 '$request_method $request_time $request_uri $scheme "$sent_http_transfer_encoding" $server_addr $server_name $server_port $server_protocol $uri';

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  exp3;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8714;
        server_name  localhost;

        #include nginx.conf.dyc;
        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        location /proxy {
            alias proxy_temp;
#            index  index.html index.htm;
            if ($uri !~ \.html$) {
                rewrite /(.*) /$1.html;
            }
#            proxy_pass :8715
        }

        location /redirected/ {
#            rewrite /(.*)/(.*) /$1_dir/$2 redirect;
            proxy_pass http://192.168.1.113:8714;
        }
        location /redirected_dir/ {
            alias /home/dyc/tools/nginx/redirected_dir/;
        }

        location /lua {
            set_unescape_uri $person $arg_person;
            set_if_empty $person "dyc";
#            echo "hello, $person";
#            content_by_lua 'ngx.say("ngx say hello, $person")';
            content_by_lua_file './test.lua';
        }

#        location ~* (.*)/$ {
#            root dyc_nonexist;
#            index  index.html index.htm;
#            rewrite (.*)/ $1.html last;
#        }

        #error_page  404              /404.html;
        error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}
        location / {
            error_page   404 500 502 503 504  /50x.html;
        }
    }

}
